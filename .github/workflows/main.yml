name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AZURE_CONTAINER_REGISTRY: us-east-1
  REGISTRY_URL: mlopsassignment1
  PROJECT_NAME: MLOpsAssignmentService
  ECS_CLUSTER: DevCluster3
  ECS_TASK_DEFINITION: .aws/MLOpsAssTaskDefine1.json
  CONTAINER_NAME: app

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        run: flake8 .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: python -m unittest discover -s tests

  deploy_docker:
    name: Deploy
    runs-on: ubuntu-latest
    #if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Build and deploy
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker build -t mlops_model:latest .
          docker tag mlops_model:latest $DOCKER_USERNAME/mlops_model:latest
          docker push $DOCKER_USERNAME/mlops_model:latest

  deploy_aks:
    name: Build Deplay AKS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code 
        uses: actions/checkout@v3
      - name: ACR build
        id: build-push-acr
        uses: azure/docker-login@v1
        with:
          login-server: mlopspks.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build . -t '${{ secrets.registry }}.azurecr.io/${{ secrets.repository }}/mlops_model:${{ github.sha }}'
          docker push '${{ secrets.registry }}.azurecr.io/${{ secrets.repository }}/mlops_model:${{ github.sha }}'
      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.resource_group }}' 
          cluster-name: '${{ secrets.cluster_name }}'
      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3
      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
             azureaks.yaml
          images: '${{ secrets.registry }}.azurecr.io/${{ secrets.repository }}/mlops_model:${{ github.sha }}'
          pull-images: false